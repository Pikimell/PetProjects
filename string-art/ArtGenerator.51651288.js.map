{"mappings":"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","sources":["src/string-art/js/draw.js"],"sourcesContent":["StringArtGenerator.prototype.Clear = function (ctx) {\n  ctx.clearRect(0, 0, this.width, this.height);\n};\n\nStringArtGenerator.prototype.GetLightness = function (red, green, blue) {\n  return Math.floor(0.2126 * red + 0.7152 * green + 0.0722 * blue);\n};\n\nStringArtGenerator.prototype.LimitPixel = function (value) {\n  if (value < 0) return 0;\n\n  if (value > 255) return 255;\n\n  return Math.round(value);\n};\n\nStringArtGenerator.prototype.DrawForm = function () {\n  let formType = this.formTypeBox.value;\n\n  this.ctx.strokeStyle = BORDER_COLOR;\n  this.ctx.beginPath();\n\n  if (formType == CIRCLE_FORM) {\n    this.ctx.arc(this.x0, this.y0, this.radius + PADDING / 2, 0, Math.PI * 2);\n  } else if (formType == RECT_FORM) {\n    this.ctx.rect(0, 0, this.width, this.height);\n  } else if (formType == ALBUM_FORM) {\n    let height = this.width / Math.sqrt(2);\n    this.ctx.rect(0, (this.height - height) / 2, this.width, height);\n  } else if (formType == PORTRAIT_FORM) {\n    let width = this.height / Math.sqrt(2);\n    this.ctx.rect((this.width - width) / 2, 0, width, this.height);\n  } else if (formType == IMAGE_FORM) {\n    this.ctx.rect(0, 0, this.imgWidth, this.imgHeight);\n  }\n\n  this.ctx.fillStyle = this.backgroundColorBox.value;\n  this.ctx.fill();\n};\n\nStringArtGenerator.prototype.DrawGrayScale = function () {\n  this.Clear(this.fakeCtx);\n  this.fakeCtx.drawImage(\n    this.image,\n    this.imgX,\n    this.imgY,\n    this.imgWidth * this.imgScale,\n    this.imgHeight * this.imgScale\n  );\n\n  let data = this.fakeCtx.getImageData(\n    0,\n    0,\n    this.width * this.dpr,\n    this.height * this.dpr\n  );\n  let pixels = data.data;\n  let invert = this.invertBox.checked;\n\n  for (let i = 0; i < pixels.length; i += 4) {\n    let lightness = this.GetLightness(pixels[i], pixels[i + 1], pixels[i + 2]);\n\n    if (invert) lightness = 255 - lightness;\n\n    lightness = this.brightnessTable[lightness];\n    lightness = this.contrastTable[lightness];\n\n    pixels[i] = lightness;\n    pixels[i + 1] = lightness;\n    pixels[i + 2] = lightness;\n  }\n\n  this.fakeCtx.putImageData(data, 0, 0);\n  this.ctx.drawImage(this.fakeCanvas, 0, 0, this.width, this.height);\n};\n\nStringArtGenerator.prototype.DrawLoadedImage = function () {\n  this.Clear(this.ctx);\n\n  this.ctx.save();\n  this.DrawForm();\n  this.ctx.clip();\n  this.DrawGrayScale();\n  this.ctx.stroke();\n  this.ctx.restore();\n};\n\nStringArtGenerator.prototype.DrawNails = function () {\n  if (this.isDraw) {\n    this.DrawForm();\n    this.ctx.fillStyle = NAIL_COLOR;\n\n    for (let nail of this.nails) {\n      this.ctx.beginPath();\n      this.ctx.arc(nail.x, nail.y, NAIL_RADIUS, 0, Math.PI * 2);\n      this.ctx.fill();\n    }\n  }\n};\n\nStringArtGenerator.prototype.DrawLine = function (nail1, nail2, lineColor) {\n  this.ctx.lineWidth = 1;\n  this.ctx.strokeStyle = lineColor;\n  this.ctx.beginPath();\n  this.ctx.moveTo(nail1.x, nail1.y);\n  this.ctx.lineTo(nail2.x, nail2.y);\n  this.ctx.stroke();\n};\n"],"names":["StringArtGenerator","prototype","Clear","ctx","clearRect","this","width","height","GetLightness","red","green","blue","Math","floor","LimitPixel","value","round","DrawForm","formType","formTypeBox","strokeStyle","BORDER_COLOR","beginPath","CIRCLE_FORM","arc","x0","y0","radius","PADDING","PI","RECT_FORM","rect","ALBUM_FORM","sqrt","PORTRAIT_FORM","IMAGE_FORM","imgWidth","imgHeight","fillStyle","backgroundColorBox","fill","DrawGrayScale","fakeCtx","drawImage","image","imgX","imgY","imgScale","data","getImageData","dpr","pixels","invert","invertBox","checked","i","length","lightness","brightnessTable","contrastTable","putImageData","fakeCanvas","DrawLoadedImage","save","clip","stroke","restore","DrawNails","isDraw","NAIL_COLOR","nail","nails","x","y","NAIL_RADIUS","DrawLine","nail1","nail2","lineColor","lineWidth","moveTo","lineTo"],"version":3,"file":"ArtGenerator.51651288.js.map"}