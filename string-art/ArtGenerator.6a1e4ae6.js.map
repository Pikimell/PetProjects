{"mappings":"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","sources":["src/string-art/js/events.js"],"sourcesContent":["StringArtGenerator.prototype.Clip = function(value, min, max) {\n    if (min > max)\n        [min, max] = [max, min]\n\n    if (value > max)\n        return max\n    \n    if (value < min)\n        return min\n\n    return value\n}\n\nStringArtGenerator.prototype.NormalizePoint = function() {\n    this.imgX = this.Clip(this.imgX, this.imgBbox.xmin, this.imgBbox.xmax - this.imgWidth * this.imgScale)\n    this.imgY = this.Clip(this.imgY, this.imgBbox.ymin, this.imgBbox.ymax - this.imgHeight * this.imgScale)\n}\n\nStringArtGenerator.prototype.TouchToPoint = function(touch) {\n    return { x: Math.round(touch.clientX), y: Math.round(touch.clientY) }\n}\n\nStringArtGenerator.prototype.GetPointDistance = function(p1, p2) {\n    let dx = p2.x - p1.x\n    let dy = p2.y - p1.y\n\n    return Math.sqrt(dx*dx + dy*dy)\n}\n\nStringArtGenerator.prototype.MaxAbs = function(a, b) {\n    return Math.abs(a) > Math.abs(b) ? a : b\n}\n\nStringArtGenerator.prototype.MouseDown = function(e) {\n    this.isPressed = true\n    this.prevX = e.offsetX\n    this.prevY = e.offsetY\n    e.preventDefault()\n}\n\nStringArtGenerator.prototype.MouseMove = function(e) {\n    e.preventDefault()\n\n    if (!this.isPressed || this.isGenerating || this.isLineDrawing)\n        return\n\n    let dx = e.offsetX - this.prevX\n    let dy = e.offsetY - this.prevY\n\n    this.imgX += dx\n    this.imgY += dy\n\n    this.prevX = e.offsetX\n    this.prevY = e.offsetY\n\n    this.NormalizePoint()\n    this.DrawLoadedImage()\n}\n\nStringArtGenerator.prototype.MouseUp = function(e) {\n    e.preventDefault()\n    this.isPressed = false\n}\n\nStringArtGenerator.prototype.MouseWheel = function(e) {\n    e.preventDefault()\n\n    if (this.isGenerating || this.isLineDrawing)\n        return\n\n    let scaleIndex = SCALES.indexOf(this.imgScale) - Math.sign(e.deltaY)\n    let scale = SCALES[Math.max(0, Math.min(SCALES.length - 1, scaleIndex))]\n\n    this.SetScale(scale, e.offsetX, e.offsetY)\n    this.NormalizePoint()\n    this.DrawLoadedImage()\n}\n\nStringArtGenerator.prototype.DragOver = function(e) {\n    this.dragDropBox.style.display = ''\n    e.preventDefault()\n}\n\nStringArtGenerator.prototype.DragLeave = function(e) {\n    this.dragDropBox.style.display = 'none'\n    e.preventDefault()\n}\n\nStringArtGenerator.prototype.Drop = function(e) {\n    e.preventDefault()\n    this.dragDropBox.style.display = 'none'\n\n    if (e.dataTransfer.files.length != 1) {\n        alert(\"Можно перетащить не более одного файла\")\n        return\n    }\n\n    let image = new Image()\n    image.onload = () => this.LoadImage(image)\n    image.src = URL.createObjectURL(e.dataTransfer.files[0])\n}\n\nStringArtGenerator.prototype.TouchStart = function(e) {\n    e.preventDefault()\n    this.touches = []\n\n    if (e.targetTouches.length == 1) {\n        let point = this.TouchToPoint(e.targetTouches[0])\n        e.offsetX = point.x\n        e.offsetY = point.y\n        this.MouseDown(e)\n    }\n    else if (e.targetTouches.length == 2) {\n        this.touches.push(this.TouchToPoint(e.targetTouches[0]))\n        this.touches.push(this.TouchToPoint(e.targetTouches[1]))\n    }\n}\n\nStringArtGenerator.prototype.TouchMove = function(e) {\n    if (!this.isPressed || this.isGenerating || this.isLineDrawing)\n        return\n\n    e.preventDefault()\n\n    if (e.targetTouches.length == 1) {\n        let point = this.TouchToPoint(e.targetTouches[0])\n        e.offsetX = point.x\n        e.offsetY = point.y\n        this.MouseMove(e)\n        return\n    }\n\n    if (e.targetTouches.length != 2)\n        return\n\n    let p1 = this.TouchToPoint(e.targetTouches[0])\n    let p2 = this.TouchToPoint(e.targetTouches[1])\n\n    let dst1 = this.GetPointDistance(this.touches[0], this.touches[1])\n    let dst2 = this.GetPointDistance(p1, p2)\n\n    if (Math.abs(dst2 - dst1) > TOUCH_DELTA)\n        this.SetScale(this.imgScale * dst2 / dst1, (p1.x + p2.x) / 2, (p1.y + p2.y) / 2)\n\n    let dx1 = p1.x - this.touches[0].x\n    let dx2 = p2.x - this.touches[1].x\n\n    if (Math.sign(dx1) == Math.sign(dx2))\n        this.imgX += this.MaxAbs(dx1, dx2)\n\n    let dy1 = p1.y - this.touches[0].y\n    let dy2 = p2.y - this.touches[1].y\n\n    if (Math.sign(dy1) == Math.sign(dy2))\n        this.imgY += this.MaxAbs(dy1, dy2)\n\n    this.touches = [p1, p2]\n\n    this.NormalizePoint()\n    this.DrawLoadedImage()\n}\n\nStringArtGenerator.prototype.TouchEnd = function(e) {\n    e.preventDefault()\n    this.isPressed = false\n}\n"],"names":["StringArtGenerator","prototype","Clip","value","min","max","NormalizePoint","this","imgX","imgBbox","xmin","xmax","imgWidth","imgScale","imgY","ymin","ymax","imgHeight","TouchToPoint","touch","x","Math","round","clientX","y","clientY","GetPointDistance","p1","p2","dx","dy","sqrt","MaxAbs","a","b","abs","MouseDown","e","isPressed","prevX","offsetX","prevY","offsetY","preventDefault","MouseMove","isGenerating","isLineDrawing","DrawLoadedImage","MouseUp","MouseWheel","scaleIndex","SCALES","indexOf","sign","deltaY","scale","length","SetScale","DragOver","dragDropBox","style","display","DragLeave","Drop","dataTransfer","files","alert","image","Image","onload","LoadImage","src","URL","createObjectURL","TouchStart","touches","targetTouches","point","push","TouchMove","dst1","dst2","TOUCH_DELTA","dx1","dx2","dy1","dy2","TouchEnd"],"version":3,"file":"ArtGenerator.6a1e4ae6.js.map"}