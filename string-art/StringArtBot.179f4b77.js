const refs={formElem:document.querySelector(".js-form"),canvas:document.querySelector("canvas")},ctx=refs.canvas.getContext("2d");let arrPoints=[];const drawPoints={prevPoint:-1,currentPoint:0,nextPoint:1};function saveData(){localStorage.setItem("points",JSON.stringify(drawPoints))}function loadData(t){arrPoints=t.split("\n"),localStorage.setItem("dataPoint",JSON.stringify(arrPoints))}function draw(){const t=+(arrPoints[drawPoints.prevPoint]||0),e=+(arrPoints[drawPoints.currentPoint]||0),a=+(arrPoints[drawPoints.nextPoint]||0);ctx.clearRect(0,0,refs.canvas.width,refs.canvas.height),drawCircle(ctx,refs.canvas.width/2-5,300,{x:refs.canvas.width/2,y:refs.canvas.height/2},t,e,a),drawText(ctx,t,{x:refs.canvas.width/2,y:refs.canvas.height/2-200},40),drawText(ctx,e,{x:refs.canvas.width/2,y:refs.canvas.height/2}),drawText(ctx,a,{x:refs.canvas.width/2,y:refs.canvas.height/2+200},40)}function drawText(t,e,{x:a,y:n},r=100){t.fillStyle="black",t.font=`${r}px serif`,t.textAlign="center",t.fillText(e,a,n)}function drawCircle(t,e,a,n,...r){const i=2*Math.PI/a;for(let r=0;r<a;r++){let a=i*r;const s={x:e*Math.sin(a)+n.x,y:e*Math.cos(a)+n.y},o=r%10==0?4:2;t.fillStyle="black",t.beginPath(),t.ellipse(s.x,s.y,o,o,0,0,2*Math.PI),t.fill()}for(let a=0;a<r.length;a++){let s=i*+r[a];const o={x:e*Math.sin(s)+n.x,y:e*Math.cos(s)+n.y};let c=5;switch(a){case 0:t.fillStyle="green";break;case 1:t.fillStyle="red",c=15;break;case 2:t.fillStyle="blue"}t.beginPath(),t.ellipse(o.x,o.y,c,c,0,0,2*Math.PI),t.fill()}}refs.formElem.addEventListener("submit",(t=>{t.preventDefault();loadData(t.target.elements.data.value)})),document.body.addEventListener("keydown",(t=>{"Enter"===t.code?(drawPoints.currentPoint=0,drawPoints.prevPoint=-1,drawPoints.nextPoint=1,0===arrPoints.length&&(arrPoints=JSON.parse(localStorage.getItem("dataPoint"))),draw()):(drawPoints.currentPoint++,drawPoints.prevPoint++,drawPoints.nextPoint++,draw())}));
//# sourceMappingURL=StringArtBot.179f4b77.js.map
