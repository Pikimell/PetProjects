{"mappings":"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","sources":["src/string-art/js/init.js"],"sourcesContent":["StringArtGenerator.prototype.InitCanvas = function (canvas) {\n  this.canvas = canvas;\n  this.ctx = this.canvas.getContext(\"2d\");\n  this.width = this.canvas.clientWidth;\n  this.height = this.canvas.clientHeight;\n\n  this.dpr = window.devicePixelRatio || 1;\n  this.canvas.width = this.width * this.dpr;\n  this.canvas.height = this.height * this.dpr;\n  this.ctx.scale(this.dpr, this.dpr);\n  this.canvas.style.width = this.width + \"px\";\n  this.canvas.style.height = this.height + \"px\";\n\n  this.fakeCanvas = document.createElement(\"canvas\");\n  this.fakeCanvas.width = this.width * this.dpr;\n  this.fakeCanvas.height = this.height * this.dpr;\n  this.fakeCtx = this.fakeCanvas.getContext(\"2d\");\n  this.fakeCtx.scale(this.dpr, this.dpr);\n\n  this.pixelCanvas = document.createElement(\"canvas\");\n  this.pixelCanvas.width = this.width;\n  this.pixelCanvas.height = this.height;\n  this.pixelCtx = this.pixelCanvas.getContext(\"2d\");\n\n  this.x0 = this.width / 2;\n  this.y0 = this.height / 2;\n  this.radius = Math.min(this.width, this.height) / 2 - PADDING;\n};\n\nStringArtGenerator.prototype.InitSelectButton = function () {\n  this.fileInput = document.createElement(\"input\");\n  this.fileInput.type = \"file\";\n  this.fileInput.accept = \"image/*\";\n  this.fileInput.addEventListener(\"change\", (e) => this.SelectImage(e));\n\n  this.selectBtn = document.getElementById(\"select-btn\");\n  this.selectBtn.addEventListener(\"click\", () => this.fileInput.click());\n};\n\nStringArtGenerator.prototype.InitControls = function () {\n  this.dragDropBox = document.getElementById(\"drag-drop-box\");\n  this.controlsBox = document.getElementById(\"controls-box\");\n\n  this.formTypeBox = document.getElementById(\"form-type-box\");\n  this.formTypeBox.addEventListener(\"change\", () => this.UpdateForm());\n\n  this.invertBox = document.getElementById(\"invert-box\");\n  this.invertBox.addEventListener(\"change\", () => this.DrawLoadedImage());\n\n  this.drawBox = document.getElementById(\"draw-box\");\n  this.drawBox.addEventListener(\"change\", () => this.changeDrawble());\n  this.isDraw = true;\n\n  this.sizeBoxElem = document.getElementById(\"size-box\");\n  this.sizeValueElem = document.getElementById(\"size-value\");\n  this.sizeBoxElem.addEventListener(\"input\", (e) => {\n    this.ChangeSize(e);\n    this.UpdateSizePhoto();\n  });\n\n  this.contrastBox = document.getElementById(\"contrast-box\");\n  this.contrastValue = document.getElementById(\"contrast-value\");\n  this.contrastBox.addEventListener(\"input\", () => this.UpdateContrast());\n  this.contrastBox.addEventListener(\"change\", () => {\n    this.UpdateContrast();\n    this.DrawLoadedImage();\n  });\n\n  this.brightnessBox = document.getElementById(\"brightness-box\");\n  this.brightnessValue = document.getElementById(\"brightness-value\");\n  this.brightnessBox.addEventListener(\"input\", () => this.UpdateBrightness());\n  this.brightnessBox.addEventListener(\"change\", () => {\n    this.UpdateBrightness();\n    this.DrawLoadedImage();\n  });\n\n  this.nailsModeBox = document.getElementById(\"nails-mode-box\");\n  this.nailsModeBox.addEventListener(\"change\", () => this.InitNails());\n\n  this.nailsCountBox = document.getElementById(\"nails-count-box\");\n  this.nailsCountBox.addEventListener(\"change\", () => this.InitNails());\n\n  this.linesCountBox = document.getElementById(\"lines-count-box\");\n\n  this.linesWeightBox = document.getElementById(\"lines-weight-box\");\n  this.linesWeightBox.addEventListener(\"input\", () => this.UpdateWeight());\n  this.linesWeightBox.addEventListener(\"change\", () => this.UpdateWeight());\n  this.linesWeightValue = document.getElementById(\"lines-weight-value\");\n\n  this.linesColorBox = document.getElementById(\"lines-color-box\");\n\n  this.backgroundColorBox = document.getElementById(\"background-color-box\");\n  this.backgroundColorBox.addEventListener(\"change\", () =>\n    this.DrawLoadedImage()\n  );\n  this.backgroundColorBox.addEventListener(\"input\", () =>\n    this.DrawLoadedImage()\n  );\n\n  this.infoBox = document.getElementById(\"info-box\");\n\n  this.generateBtn = document.getElementById(\"generate-btn\");\n  this.generateBtn.addEventListener(\"click\", () => this.Generate());\n\n  this.resetBtn = document.getElementById(\"reset-btn\");\n  this.resetBtn.addEventListener(\"click\", () =>\n    this.Reset(!this.isLineDrawing)\n  );\n\n  this.statusBox = document.getElementById(\"status-box\");\n\n  this.controls = [\n    this.selectBtn,\n    this.invertBox,\n    this.contrastBox,\n    this.drawBox,\n    this.brightnessBox,\n    this.formTypeBox,\n    this.nailsModeBox,\n    this.nailsCountBox,\n    this.linesCountBox,\n    this.linesWeightBox,\n    this.linesColorBox,\n    this.backgroundColorBox,\n    this.resetBtn,\n    this.sizeBoxElem,\n  ];\n\n  this.UpdateContrast();\n  this.UpdateBrightness();\n};\n\nStringArtGenerator.prototype.changeDrawble = function () {\n  this.isDraw = this.drawBox.checked;\n};\n\nStringArtGenerator.prototype.InitSave = function () {\n  this.saveBox = document.getElementById(\"save-box\");\n\n  this.saveTypeBox = document.getElementById(\"save-type-box\");\n  this.saveBtn = document.getElementById(\"save-btn\");\n  this.saveBtn.addEventListener(\"click\", () => this.Save());\n};\n\nStringArtGenerator.prototype.InitEvents = function () {\n  this.canvas.addEventListener(\"mousedown\", (e) => this.MouseDown(e));\n  this.canvas.addEventListener(\"mousemove\", (e) => this.MouseMove(e));\n  this.canvas.addEventListener(\"mouseup\", (e) => this.MouseUp(e));\n  this.canvas.addEventListener(\"mouseleave\", (e) => this.MouseUp(e));\n  this.canvas.addEventListener(\"mousewheel\", (e) => this.MouseWheel(e));\n  this.canvas.addEventListener(\"wheel\", (e) => this.MouseWheel(e));\n\n  this.touches = [];\n  this.canvas.addEventListener(\"touchstart\", (e) => {\n    this.TouchStart(e);\n  });\n  this.canvas.addEventListener(\"touchmove\", (e) => {\n    this.TouchMove(e);\n  });\n  this.canvas.addEventListener(\"touchend\", (e) => {\n    this.TouchEnd(e);\n  });\n\n  let generator = document.getElementById(\"generator-box\");\n  generator.addEventListener(\"dragover\", (e) => this.DragOver(e));\n  generator.addEventListener(\"dragleave\", (e) => this.DragLeave(e));\n  generator.addEventListener(\"drop\", (e) => this.Drop(e));\n};\n\nStringArtGenerator.prototype.Interpolate = function (a, b, t) {\n  return a * t + b * (1 - t);\n};\n\nStringArtGenerator.prototype.GetCircleNail = function (t) {\n  let x = this.x0 + this.radius * Math.cos(t);\n  let y = this.y0 + this.radius * Math.sin(t);\n\n  return { x: x, y: y };\n};\n\nStringArtGenerator.prototype.GetRectNail = function (\n  angle,\n  x0,\n  y0,\n  width,\n  height\n) {\n  let t = angle / (2 * Math.PI);\n  let aspectRatio = width / height;\n  let t1 = 0.5 / (1 + aspectRatio);\n  let ts = [0, t1, 0.5, 0.5 + t1, 1];\n  let x, y;\n\n  if (t < ts[1]) {\n    x = x0 + width / 2;\n    y = this.Interpolate(\n      y0 - height / 2,\n      y0 + height / 2,\n      (t - ts[0]) / (ts[1] - ts[0])\n    );\n  } else if (t < ts[2]) {\n    x = this.Interpolate(\n      x0 - width / 2,\n      x0 + width / 2,\n      (t - ts[1]) / (ts[2] - ts[1])\n    );\n    y = y0 + height / 2;\n  } else if (t < ts[3]) {\n    x = x0 - width / 2;\n    y = this.Interpolate(\n      y0 + height / 2,\n      y0 - height / 2,\n      (t - ts[2]) / (ts[3] - ts[2])\n    );\n  } else {\n    x = this.Interpolate(\n      x0 + width / 2,\n      x0 - width / 2,\n      (t - ts[3]) / (ts[4] - ts[3])\n    );\n    y = y0 - height / 2;\n  }\n\n  return { x: x, y: y };\n};\n\nStringArtGenerator.prototype.InitBorderNails = function (nailsCount) {\n  let angle = (2 * Math.PI) / nailsCount;\n  let nails = [];\n\n  for (let i = 0; i < nailsCount; i++) {\n    let nail = { x: 0, y: 0 };\n    let t = i * angle;\n\n    if (this.formType == CIRCLE_FORM) {\n      nail = this.GetCircleNail(t);\n    } else if (this.formType == RECT_FORM) {\n      nail = this.GetRectNail(\n        t,\n        this.x0,\n        this.y0,\n        this.width - 2 * PADDING,\n        this.height - 2 * PADDING\n      );\n    } else if (this.formType == ALBUM_FORM) {\n      let size = this.width - 2 * PADDING;\n      nail = this.GetRectNail(t, this.x0, this.y0, size, size / Math.sqrt(2));\n    } else if (this.formType == PORTRAIT_FORM) {\n      let size = this.height - 2 * PADDING;\n      nail = this.GetRectNail(t, this.x0, this.y0, size / Math.sqrt(2), size);\n    } else if (this.formType == IMAGE_FORM) {\n      let width = this.imgWidth - 2 * PADDING;\n      let height = this.imgHeight - 2 * PADDING;\n      nail = this.GetRectNail(\n        t,\n        this.imgWidth / 2,\n        this.imgHeight / 2,\n        width,\n        height\n      );\n    }\n\n    nail.x = Math.round(nail.x);\n    nail.y = Math.round(nail.y);\n\n    nails.push(nail);\n  }\n\n  return nails;\n};\n\nStringArtGenerator.prototype.InitGridNails = function (nailsCount) {\n  let nails = [];\n  let width = this.imgBbox.xmax - this.imgBbox.xmin;\n  let height = this.imgBbox.ymax - this.imgBbox.ymin;\n  let aspectRatio = width / height;\n\n  let scale = this.formType == CIRCLE_FORM ? 2 / Math.sqrt(Math.PI) : 1;\n  let wc = Math.round(Math.sqrt(nailsCount * aspectRatio * scale));\n  let hc = Math.round(Math.sqrt((nailsCount / aspectRatio) * scale) * scale);\n\n  let x0 = (this.imgBbox.xmin + this.imgBbox.xmax) / 2;\n  let y0 = (this.imgBbox.ymin + this.imgBbox.ymax) / 2;\n\n  for (let i = 0; i < hc; i++) {\n    for (let j = 0; j < wc; j++) {\n      let x = this.Interpolate(\n        this.imgBbox.xmin + PADDING,\n        this.imgBbox.xmax - PADDING,\n        j / (wc - 1)\n      );\n      let y = this.Interpolate(\n        this.imgBbox.ymin + PADDING,\n        this.imgBbox.ymax - PADDING,\n        i / (hc - 1)\n      );\n\n      if (this.formType == CIRCLE_FORM) {\n        let dx = x - x0;\n        let dy = y - y0;\n\n        if (dx * dx + dy * dy > this.radius * this.radius) continue;\n      }\n\n      nails.push({\n        x: Math.round(x),\n        y: Math.round(y),\n      });\n    }\n  }\n\n  return nails;\n};\n\nStringArtGenerator.prototype.InitGridRandom = function (nailsCount) {\n  let nails = [];\n\n  for (let i = 0; i < nailsCount; i++) {\n    let x, y;\n\n    if (this.formType == CIRCLE_FORM) {\n      let t = Math.random() * 2 * Math.PI;\n      let radius = this.radius * Math.sqrt(Math.random());\n\n      x = (this.imgBbox.xmin + this.imgBbox.xmax) / 2 + radius * Math.cos(t);\n      y = (this.imgBbox.ymin + this.imgBbox.ymax) / 2 + radius * Math.sin(t);\n    } else {\n      x =\n        this.imgBbox.xmin +\n        Math.random() * (this.imgBbox.xmax - this.imgBbox.xmin);\n      y =\n        this.imgBbox.ymin +\n        Math.random() * (this.imgBbox.ymax - this.imgBbox.ymin);\n    }\n\n    nails.push({\n      x: Math.round(x),\n      y: Math.round(y),\n    });\n  }\n\n  return nails;\n};\n\nStringArtGenerator.prototype.InitNails = function () {\n  let nailsMode = this.nailsModeBox.value;\n  let nailsCount = +this.nailsCountBox.value;\n  this.nails = [];\n\n  if (nailsMode == BORDER_MODE) {\n    this.nails = this.InitBorderNails(nailsCount);\n  } else if (nailsMode == GRID_MODE) {\n    this.nails = this.InitGridNails(nailsCount);\n  } else if (nailsMode == RANDOM_MODE) {\n    this.nails = this.InitGridRandom(nailsCount);\n  }\n};\n\nStringArtGenerator.prototype.LineRasterization = function (x1, y1, x2, y2) {\n  let line = new Set();\n\n  let delta_x = Math.abs(x2 - x1);\n  let delta_y = Math.abs(y2 - y1);\n\n  let sign_x = Math.sign(x2 - x1);\n  let sign_y = Math.sign(y2 - y1);\n\n  let error = delta_x - delta_y;\n\n  while (x1 != x2 || y1 != y2) {\n    line.add(y1 * this.width + x1);\n    error2 = error * 2;\n\n    if (error2 > -delta_y) {\n      error -= delta_y;\n      x1 += sign_x;\n    }\n\n    if (error2 < delta_x) {\n      error += delta_x;\n      y1 += sign_y;\n    }\n  }\n\n  line.add(y2 * this.width + x2);\n  return line;\n};\n\nStringArtGenerator.prototype.InitBbox = function () {\n  this.imgBbox = {\n    xmin: 0,\n    ymin: 0,\n    xmax: this.width,\n    ymax: this.height,\n  };\n\n  if (this.formType == ALBUM_FORM) {\n    let height = Math.round(this.width / Math.sqrt(2));\n    this.imgBbox.ymin = Math.round((this.height - height) / 2);\n    this.imgBbox.ymax = this.imgBbox.ymin + height;\n  } else if (this.formType == PORTRAIT_FORM) {\n    let width = Math.round(this.height / Math.sqrt(2));\n    this.imgBbox.xmin = Math.round((this.width - width) / 2);\n    this.imgBbox.xmax = this.imgBbox.xmin + width;\n  } else if (this.formType == IMAGE_FORM) {\n    this.imgBbox.xmax = this.imgWidth;\n    this.imgBbox.ymax = this.imgHeight;\n  }\n\n  this.NormalizePoint();\n};\n"],"names":["StringArtGenerator","prototype","InitCanvas","canvas","this","ctx","getContext","width","clientWidth","height","clientHeight","dpr","window","devicePixelRatio","scale","style","fakeCanvas","document","createElement","fakeCtx","pixelCanvas","pixelCtx","x0","y0","radius","Math","min","PADDING","InitSelectButton","fileInput","type","accept","addEventListener","e","SelectImage","selectBtn","getElementById","click","InitControls","dragDropBox","controlsBox","formTypeBox","UpdateForm","invertBox","DrawLoadedImage","drawBox","changeDrawble","isDraw","sizeBoxElem","sizeValueElem","ChangeSize","UpdateSizePhoto","contrastBox","contrastValue","UpdateContrast","brightnessBox","brightnessValue","UpdateBrightness","nailsModeBox","InitNails","nailsCountBox","linesCountBox","linesWeightBox","UpdateWeight","linesWeightValue","linesColorBox","backgroundColorBox","infoBox","generateBtn","Generate","resetBtn","Reset","isLineDrawing","statusBox","controls","checked","InitSave","saveBox","saveTypeBox","saveBtn","Save","InitEvents","MouseDown","MouseMove","MouseUp","MouseWheel","touches","TouchStart","TouchMove","TouchEnd","generator","DragOver","DragLeave","Drop","Interpolate","a","b","t","GetCircleNail","x","cos","y","sin","GetRectNail","angle","PI","t1","ts","InitBorderNails","nailsCount","nails","i","nail","formType","CIRCLE_FORM","RECT_FORM","ALBUM_FORM","size","sqrt","PORTRAIT_FORM","size1","IMAGE_FORM","imgWidth","imgHeight","round","push","InitGridNails","aspectRatio","imgBbox","xmax","xmin","ymax","ymin","wc","hc","j","dx","dy","InitGridRandom","random","nailsMode","value","BORDER_MODE","GRID_MODE","RANDOM_MODE","LineRasterization","x1","y1","x2","y2","line","Set","delta_x","abs","delta_y","sign_x","sign","sign_y","error","add","error2","InitBbox","NormalizePoint"],"version":3,"file":"ArtGenerator.e7b27c9f.js.map"}