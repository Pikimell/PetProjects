{"mappings":"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","sources":["node_modules/@swc/helpers/src/_class_extract_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_get.mjs","node_modules/@swc/helpers/src/_class_private_field_get.mjs","node_modules/@swc/helpers/src/_check_private_redeclaration.mjs","node_modules/@swc/helpers/src/_class_private_field_init.mjs","node_modules/@swc/helpers/src/_class_check_private_static_access.mjs","node_modules/@swc/helpers/src/_class_check_private_static_field_descriptor.mjs","node_modules/@swc/helpers/src/_class_static_private_field_spec_get.mjs","node_modules/@swc/helpers/src/_class_apply_descriptor_set.mjs","node_modules/@swc/helpers/src/_class_static_private_field_spec_set.mjs","node_modules/@swc/helpers/src/_define_property.mjs","src/circles/circle.js","src/circles/script.js"],"sourcesContent":["export default function _classExtractFieldDescriptor(receiver, privateMap, action) {\n  if (!privateMap.has(receiver)) {\n    throw new TypeError(\"attempted to \" + action + \" private field on non-instance\");\n  }\n  return privateMap.get(receiver);\n}\n","export default function _classApplyDescriptorGet(receiver, descriptor) {\n  if (descriptor.get) {\n    return descriptor.get.call(receiver);\n  }\n  return descriptor.value;\n}\n","import classExtractFieldDescriptor from './_class_extract_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classPrivateFieldGet(receiver, privateMap) {\n  var descriptor = classExtractFieldDescriptor(receiver, privateMap, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _checkPrivateRedeclaration(obj, privateCollection) {\n  if (privateCollection.has(obj)) {\n    throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n  }\n}\n","import _checkPrivateRedeclaration from \"./_check_private_redeclaration.mjs\";\n\nexport default function _classPrivateFieldInit(obj, privateMap, value) {\n  _checkPrivateRedeclaration(obj, privateMap);\n  privateMap.set(obj, value);\n}\n","export default function _classCheckPrivateStaticAccess(receiver, classConstructor) { \n  if (receiver !== classConstructor) {\n    throw new TypeError(\"Private static access of wrong provenance\");\n  } \n}\n","export default function _classCheckPrivateStaticFieldDescriptor(descriptor, action) {\n  if (descriptor === undefined) {\n    throw new TypeError(\"attempted to \" + action + \" private static field before its declaration\");\n  }\n}\n","import classCheckPrivateStaticAccess from './_class_check_private_static_access.mjs';\nimport classCheckPrivateStaticFieldDescriptor from './_class_check_private_static_field_descriptor.mjs';\nimport classApplyDescriptorGet from './_class_apply_descriptor_get.mjs';\n\nexport default function _classStaticPrivateFieldSpecGet(receiver, classConstructor, descriptor) {\n  classCheckPrivateStaticAccess(receiver, classConstructor);\n  classCheckPrivateStaticFieldDescriptor(descriptor, \"get\");\n  return classApplyDescriptorGet(receiver, descriptor);\n}\n","export default function _classApplyDescriptorSet(receiver, descriptor, value) {\n  if (descriptor.set) {\n    descriptor.set.call(receiver, value);\n  } else {\n    if (!descriptor.writable) {\n      // This should only throw in strict mode, but class bodies are\n      // always strict and private fields can only be used inside\n      // class bodies.\n      throw new TypeError(\"attempted to set read only private field\");\n    }\n    descriptor.value = value;\n  }\n}\n","import classCheckPrivateStaticAccess from './_class_check_private_static_access.mjs';\nimport classCheckPrivateStaticFieldDescriptor from './_class_check_private_static_field_descriptor.mjs';\nimport classApplyDescriptorSet from './_class_apply_descriptor_set.mjs';\n\nexport default function _classStaticPrivateFieldSpecSet(receiver, classConstructor, descriptor, value) {\n  classCheckPrivateStaticAccess(receiver, classConstructor);\n  classCheckPrivateStaticFieldDescriptor(descriptor, \"set\");\n  classApplyDescriptorSet(receiver, descriptor, value);\n  return value;\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n","export class Circle {\n  static #canvas;\n  radius = 25;\n  center = new Point();\n  angle = 0;\n  currentPoint = new Point();\n\n  constructor({ canvas, center, step = 1, radius = 25 }) {\n    const { x, y } = center;\n    this.center = new Point(x, y);\n    this.radius = radius;\n    Circle.#canvas = canvas.getContext(\"2d\");\n    Circle.#canvas.lineWidth = 5;\n    Circle.#canvas.lineCap = \"round\";\n    this.step = step;\n  }\n\n  show() {\n    Circle.#canvas.fillStyle = \"black\";\n    const center = this.center;\n    this.drawEllipse(center);\n    this.drawLine(center, this.currentPoint);\n  }\n\n  nextIteration() {\n    const speed = +(Math.abs(this.angle - 180) / 90).toFixed(2);\n    this.angle += this.step; // + speed;\n    this.angle %= 360;\n\n    const slice = (2 * Math.PI) / 360;\n    this.currentPoint.x =\n      this.radius * Math.cos(this.angle * slice) + this.center.x;\n    this.currentPoint.y =\n      this.radius * Math.sin(this.angle * slice) + this.center.y;\n  }\n\n  // =======================================\n\n  drawLine(startPos, endPos) {\n    Circle.#canvas.moveTo(startPos.x, startPos.y);\n    Circle.#canvas.lineTo(endPos.x, endPos.y);\n    Circle.#canvas.stroke();\n    this.drawDot(endPos);\n  }\n\n  drawDot(center) {\n    Circle.#canvas.fillStyle = \"red\";\n    Circle.#canvas.beginPath();\n    Circle.#canvas.ellipse(center.x, center.y, 5, 5, 0, 0, 2 * Math.PI);\n    Circle.#canvas.fill();\n    Circle.#canvas.beginPath();\n    Circle.#canvas.fillStyle = \"black\";\n  }\n\n  drawEllipse(center) {\n    Circle.#canvas.beginPath();\n    Circle.#canvas.ellipse(\n      center.x,\n      center.y,\n      this.radius,\n      this.radius,\n      0,\n      0,\n      2 * Math.PI\n    );\n    Circle.#canvas.closePath();\n    Circle.#canvas.strokeStyle = \"black\";\n    Circle.#canvas.stroke();\n  }\n\n  static clearCanvas() {\n    Circle.#canvas.clearRect(0, 0, 10000, 10000);\n  }\n\n  static get canvas() {\n    return this.#canvas;\n  }\n}\n\nclass Point {\n  #PADDING = 60;\n  x;\n  y;\n  constructor(x = 0, y = 0) {\n    this.x = x + this.#PADDING;\n    this.y = y + this.#PADDING;\n  }\n}\n","import { Circle } from \"./circle.js\";\nimport reload from \"./controlls.js\";\n\nlet idInterval = null;\nconst refs = {\n  canvas: document.querySelector(\".js-canvas1\"),\n  canvas2: document.querySelector(\".js-canvas2\"),\n  saveBtn: document.querySelector(\".js-save-btn\"),\n};\n\nconst options = {\n  circlesX: [],\n  circlesY: [],\n  LENX: 5,\n  LENY: 5,\n  CIRCLE_RADIUS: 50,\n  colorBrush: \"blue\",\n  widthBrush: 2,\n};\n\nrefs.canvas.width = options.LENX * (options.CIRCLE_RADIUS * 2 + 20);\nrefs.canvas.height = options.LENY * (options.CIRCLE_RADIUS * 2 + 20);\nrefs.canvas2.width = options.LENX * (options.CIRCLE_RADIUS * 2 + 20);\nrefs.canvas2.height = options.LENY * (options.CIRCLE_RADIUS * 2 + 20);\n\nfunction init() {\n  if (idInterval) clearInterval(idInterval);\n\n  for (let i = 0; i < options.LENX; i++) {\n    const center = {\n      x: i * (options.CIRCLE_RADIUS * 2 + 20),\n      y: 0 * (options.CIRCLE_RADIUS * 2 + 20),\n    };\n    options.circlesX[i] = new Circle({\n      canvas: refs.canvas,\n      center,\n      step: i + 1,\n      radius: options.CIRCLE_RADIUS,\n    });\n  }\n  for (let i = 0; i < options.LENY; i++) {\n    const center = {\n      x: 0 * (options.CIRCLE_RADIUS * 2 + 20),\n      y: i * (options.CIRCLE_RADIUS * 2 + 20),\n    };\n    options.circlesY[i] = new Circle({\n      canvas: refs.canvas,\n      center,\n      step: i + 1,\n      radius: options.CIRCLE_RADIUS,\n    });\n  }\n\n  idInterval = setInterval(() => {\n    Circle.clearCanvas();\n    drawCircles();\n  }, 10);\n}\ninit();\nfunction drawCircles() {\n  for (let i = 1; i < options.LENX; i++) {\n    options.circlesX[i].nextIteration();\n    options.circlesX[i].show();\n  }\n  for (let i = 1; i < options.LENY; i++) {\n    options.circlesY[i].nextIteration();\n    options.circlesY[i].show();\n  }\n\n  for (let i = 1; i < options.LENX; i++) {\n    for (let j = 1; j < options.LENY; j++) {\n      const x = options.circlesX[i].currentPoint.x;\n      const y = options.circlesY[j].currentPoint.y;\n      drawPoint(x, y);\n\n      // drawLine(options.circlesX[i].currentPoint, {\n      //   x: x,\n      //   y: options.circlesY[j].currentPoint.y,\n      // });\n\n      // drawLine(options.circlesY[j].currentPoint, {\n      //   x: options.circlesX[i].currentPoint.x,\n      //   y: options.circlesY[j].currentPoint.y,\n      // });\n    }\n  }\n}\n\nfunction drawPoint(x, y) {\n  const RADIUS = options.widthBrush;\n  const canvas = refs.canvas2.getContext(\"2d\");\n  canvas.fillStyle = options.colorBrush;\n  canvas.beginPath();\n  canvas.ellipse(x, y, RADIUS, RADIUS, 0, 0, 2 * Math.PI);\n  canvas.fill();\n  canvas.beginPath();\n  canvas.fillStyle = \"black\";\n}\n\nfunction drawLine(startPos, endPos) {\n  Circle.canvas.moveTo(startPos.x, startPos.y);\n  Circle.canvas.lineTo(endPos.x, endPos.y);\n  Circle.canvas.stroke();\n}\n\nrefs.saveBtn.addEventListener(\"click\", () => {\n  let downloadLink = document.createElement(\"a\");\n  downloadLink.setAttribute(\"download\", \"CanvasAsImage.png\");\n  let dataURL = refs.canvas2.toDataURL(\"image/png\");\n  let url = dataURL.replace(\n    /^data:image\\/png/,\n    \"data:application/octet-stream\"\n  );\n  downloadLink.setAttribute(\"href\", url);\n  downloadLink.click();\n});\n\ndocument.querySelector(\".js-control-form\").addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  Circle.clearCanvas();\n  const canvas = refs.canvas2.getContext(\"2d\");\n  canvas.clearRect(0, 0, 10000, 10000);\n  reload(init, options, e.target);\n});\n"],"names":["$99d26d6ae153323e$export$2e2bcd8739ae039","receiver","privateMap","action","has","TypeError","get","$77325facfa382e54$export$2e2bcd8739ae039","descriptor","call","value","$92121ed38d27acb0$export$2e2bcd8739ae039","$dba1998b20ced464$export$2e2bcd8739ae039","obj","privateCollection","$7efc65a322f137af$export$2e2bcd8739ae039","set","$00a6d02dde504bae$export$2e2bcd8739ae039","classConstructor","$00eea215e904da7f$export$2e2bcd8739ae039","undefined","$b7c5c6210990a75a$export$2e2bcd8739ae039","$dac75875e16c3833$export$2e2bcd8739ae039","writable","$2dcf76510cb6caa2$export$2e2bcd8739ae039","$9139f4380ced0e7c$export$2e2bcd8739ae039","key","Object","defineProperty","enumerable","configurable","$a3ae8b5d7cc38679$export$c89a927ffc67e6fa","show","$a3ae8b5d7cc38679$var$_canvas","fillStyle","center","this","drawEllipse","drawLine","currentPoint","nextIteration","Math","abs","angle","toFixed","step","slice","PI","x","radius","cos","y","sin","startPos","endPos","moveTo","lineTo","stroke","drawDot","beginPath","ellipse","fill","closePath","strokeStyle","static","clearRect","canvas","constructor","$a3ae8b5d7cc38679$var$Point","getContext","lineWidth","lineCap","$a3ae8b5d7cc38679$var$_PADDING","WeakMap","$c731828f2114a63e$var$idInterval","$c731828f2114a63e$var$refs","document","querySelector","canvas2","saveBtn","$c731828f2114a63e$var$options","circlesX","circlesY","LENX","LENY","CIRCLE_RADIUS","colorBrush","widthBrush","$c731828f2114a63e$var$init","clearInterval","i","i1","center1","setInterval","clearCanvas","i2","j","$c731828f2114a63e$var$drawPoint","$c731828f2114a63e$var$drawCircles","RADIUS","width","height","addEventListener","downloadLink","createElement","setAttribute","url","toDataURL","replace","click","e","preventDefault","$48XYA","default","target"],"version":3,"file":"index.f51a28f4.js.map"}